/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/PYsV8vWoBCN
 * Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
 */

/** Add fonts into your Next.js project:

import { Inter } from 'next/font/google'

inter({
  subsets: ['latin'],
  display: 'swap',
})

To read more about using these font, please visit the Next.js documentation:
- App Directory: https://nextjs.org/docs/app/building-your-application/optimizing/fonts
- Pages Directory: https://nextjs.org/docs/pages/building-your-application/optimizing/fonts
**/
'use client';

import { useState } from 'react';
import {
  Dialog,
  DialogTrigger,
  DialogContent,
  DialogHeader,
  DialogTitle,
  DialogDescription,
  DialogFooter,
  DialogClose
} from '@/components/ui/dialog/dialog';
import { Button } from '@/components/ui/button/button';
import { Label } from '@/components/ui/label/label';
import { Input } from '@/components/ui/input/input';
import { Textarea } from '@/components/ui/textarea/textarea';
import {
  Select,
  SelectTrigger,
  SelectValue,
  SelectContent,
  SelectItem
} from '@/components/ui/select/select';
import { RadioGroup, RadioGroupItem } from '@/components/ui/radio/radio-group';
import { ShieldIcon } from '@/components/icon/icon';
import { MAX_DIFFICULTY_LEVEL } from '@/constants/study/study';

export default function createModal() {
  const [difficultyLevel, setDifficultyLevel] = useState({
    begin: 0,
    end: MAX_DIFFICULTY_LEVEL
  });
  const [showDifficultyModal, setShowDifficultyModal] = useState(false);
  return (
    <Dialog defaultOpen>
      <DialogTrigger asChild>
        <Button variant="outline">Create Study Group</Button>
      </DialogTrigger>
      <DialogContent className="sm:max-w-[600px]">
        <DialogHeader>
          <DialogTitle>새로운 스터디 개설하기</DialogTitle>
          <DialogDescription>
            스터디를 개설하려면 상세정보를 입력하세요.
          </DialogDescription>
        </DialogHeader>
        <form className="grid gap-4">
          <div className="grid grid-cols-2 gap-4">
            <div className="space-y-2 col-span-2">
              <Label className="pl-1" htmlFor="name">
                스터디 그룹명
              </Label>
              <Input
                id="name"
                placeholder="그룹명을 입력하세요"
                className="w-full"
              />
            </div>
          </div>
          <div className="space-y-2">
            <Label className="pl-1" htmlFor="intro">
              소개말
            </Label>
            <Textarea
              id="intro"
              placeholder="스터디 그룹에 대해 소개해주세요"
            />
          </div>
          <div className="grid grid-cols-3 gap-4">
            <div className="space-y-2">
              <Label className="pl-1" htmlFor="start-date">
                시작 날짜
              </Label>
              <Input id="start-date" type="date" />
            </div>
            <div className="space-y-2">
              <Label className="pl-1" htmlFor="end-date">
                종료 날짜
              </Label>
              <Input id="end-date" type="date" />
            </div>
            <div className="space-y-2">
              <Label className="pl-1" htmlFor="weeks">
                총 주차수
              </Label>
              <Input id="weeks" type="number" min="1" max="52" />
            </div>
          </div>
          <div className="grid grid-cols-3 gap-4">
            <div className="space-y-2">
              <Label className="pl-1" htmlFor="penalty">
                벌금
              </Label>
              <Input id="penalty" type="number" min="0" className="w-full" />
            </div>
            <div className="grid grid-cols-2 gap-4">
              <div className="space-y-2">
                <Label className="pl-1" htmlFor="rating-limit">
                  인원 제한
                </Label>
                <Input id="capcity" type="number" min="0" className="w-full" />
              </div>
              <div className="space-y-2">
                <Label className="pl-1" htmlFor="rating-limit">
                  신뢰도 제한
                </Label>
                <Input
                  id="rating-limit"
                  type="number"
                  min="0"
                  className="w-full"
                />
              </div>
            </div>

            <div className="space-y-2">
              <Label className="pl-1" htmlFor="type">
                스터디 종류
              </Label>
              <Select id="type">
                <SelectTrigger>
                  <SelectValue />
                </SelectTrigger>
                <SelectContent>
                  <SelectItem value="reading">알고리즘 스터디</SelectItem>
                  <SelectItem value="writing">기술서적 스터디</SelectItem>
                </SelectContent>
              </Select>
            </div>
          </div>
          <div className="grid grid-cols-2 mr-4">
            <div className="space-y-2">
              <Label className="pl-1" htmlFor="book-search">
                도서 검색
              </Label>
              <div className=" rounded-md border-gray-200 border wrap-content">
                <div className="flex gap-2 ">
                  <Input
                    className="border-none m-0"
                    id="book-search"
                    placeholder="도서명/저자를 입력하세요."
                  />
                  <Button type="button" variant="ghost" size="icon">
                    <SearchIcon className="h-4 w-4 " />
                    <span className="sr-only">Search</span>
                  </Button>
                </div>
              </div>
            </div>
          </div>
          <div className="grid grid-cols-3 gap-4">
            <div className="space-y-2">
              <Label className="pl-1">문제 난이도</Label>
              <div className="grid grid-cols-5">
                <Button
                  className="col-span-2"
                  variant="outline"
                  onClick={() => setShowDifficultyModal(true)}
                >
                  <ShieldIcon
                    className="stroke-none fill-amber-700"
                    text="5"
                  ></ShieldIcon>
                </Button>
                <div className="content-center w-full">
                  <p className=" text-center">~</p>
                </div>
                <Button
                  className="col-span-2"
                  variant="outline"
                  onClick={() => setShowDifficultyModal(true)}
                >
                  <ShieldIcon
                    className="stroke-none fill-sky-700"
                    text="1"
                  ></ShieldIcon>
                </Button>
              </div>
            </div>
            <div className="space-y-2 mr-4">
              <Label className="pl-1" htmlFor="rating-limit">
                문제 개수
              </Label>
              <Input
                id="problemCount"
                type="number"
                min="0"
                className="w-[50%]"
              />
            </div>
          </div>
        </form>
        <DialogFooter>
          <Button variant="outline">취소</Button>
          <Button className="hover:bg-gray-600 bg-gray-900" type="submit">
            <p className="text-white">스터디 개설하기</p>
          </Button>
        </DialogFooter>
      </DialogContent>
      {
        <Dialog defaultOpen>
          <DialogContent className="sm:max-w-[400px]">
            <RadioGroup
              value={difficultyLevel.begin.toString()}
              onValueChange={(value) => {
                console.log('changed:', value);
                setDifficultyLevel((prev) => ({
                  ...prev,
                  begin: Number(value)
                }));
              }}
            >
              <div className="grid grid-cols-5 grid-rows-6 gap-4 py-4">
                <div>
                  <RadioGroupItem
                    value="1"
                    id="bronze-5"
                    className="peer sr-only"
                  />
                  <Label
                    htmlFor="bronze-5"
                    className="flex flex-col items-center gap-2 cursor-pointer"
                  >
                    <div className="hover:bg-gray-200 aspect-square w-12 flex items-center justify-center border border-slate-200 rounded-full peer-checked:bg-slate-900 peer-checked:text-slate-50 dark:border-slate-800 dark:peer-checked:bg-slate-50 dark:peer-checked:text-slate-900">
                      <ShieldIcon
                        className="stroke-none fill-amber-700"
                        text="5"
                      ></ShieldIcon>
                    </div>
                  </Label>
                </div>
                <div>
                  <RadioGroupItem
                    value="2"
                    id="bronze-4"
                    className="peer sr-only"
                  />
                  <Label
                    htmlFor="bronze-4"
                    className="flex flex-col items-center gap-2 cursor-pointer"
                  >
                    <div className="hover:bg-gray-200 aspect-square w-12 flex items-center justify-center border border-slate-200 rounded-full peer-checked:bg-slate-900 peer-checked:text-slate-50 dark:border-slate-800 dark:peer-checked:bg-slate-50 dark:peer-checked:text-slate-900">
                      <ShieldIcon
                        className="stroke-none fill-amber-700"
                        text="5"
                      ></ShieldIcon>
                    </div>
                  </Label>
                </div>
              </div>
            </RadioGroup>
          </DialogContent>
        </Dialog>
      }
    </Dialog>
  );
}

function BetweenVerticalStartIcon(props) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <rect width="7" height="13" x="3" y="8" rx="1" />
      <path d="m15 2-3 3-3-3" />
      <rect width="7" height="13" x="14" y="8" rx="1" />
    </svg>
  );
}

function SearchIcon(props) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <circle cx="11" cy="11" r="8" />
      <path d="m21 21-4.3-4.3" />
    </svg>
  );
}
